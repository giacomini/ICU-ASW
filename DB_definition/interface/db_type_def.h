/**
 * \file	db_type_def.h
 *
 * \brief	Definition of ICU ASW DataBase Parameters
 *
 * \author  Donata Bonino, <bonino_at_oato.inaf.it>
 *
 * \internal
 *  Created on: Mar 31, 2015
 */

#ifndef DB_TYPE_DEF_H_
#define DB_TYPE_DEF_H_

#include <rtems.h>
/**
 *  \ingroup DB_MANAGER_TYPES
 *  \{
 */


typedef struct {
	uint16_t parID;
	uint16_t size;
	uint16_t current_value;
	uint16_t lower_bound;
	uint16_t upper_bound;
	uint32_t DAS_idx;
	/* 0: monitoring not enabled; 1: monitoring enabled */
	uint16_t hk_monitor_flag;
} db_bnd_param_t;

typedef struct {
	uint16_t parID;
	uint16_t size;
	uint16_t current_value;
} db_param_t;

/**
 * \}
 */

/**
 *  \ingroup DB_MANAGER_CONSTANTS
 *  \{
 */

/**
 * \enum DB_PARAMETER_INDEX DB_parameter_index
 * \brief List of index of DB values with current value greater than 2 Bytes
 */
enum {
	DB_PLANNING_ID_IDX = 0,
	DB_RT_TASK_STATUS_IDX,
	DB_BC_TASK_STATUS_IDX,
	DB_TC_TASK_STATUS_IDX,
	DB_ATR_TASK_STATUS_IDX,
	DB_TM_TASK_STATUS_IDX,
	DB_IDLE_TASK_STATUS_IDX,
	DB_EXEC_TASK_STATUS_IDX,
	DB_FDIR_TASK_STATUS_IDX,
	DB_TM_ACQ_TASK_STATUS_IDX,
	DB_TC_6_5_TASK_STATUS_IDX,
	DB_WP_TASK_STATUS_IDX,
	DB_MONITOR_TASK_STATUS_IDX,
	DB_ICU_FDIR_IDX,
	DB_DAS_TABLE_OBT_COARSE_IDX, /* 14 */
	DB_DAS_TABLE_OBT_FINE_IDX,
	DB_DPU1_STATUS_TAB_OBT_IDX, /* 16 */
	DB_DPU1_DCU_DATA_IDX,
	DB_DPU1_SCE_OBTAINED_WORDS_IDX,
	DB_DPU1_DBB_STATUS_REG_IDX,
	DB_DPU1_MONITOR_TAB_OBT_IDX,
	DB_DPU1_REJECTED_CMD_IDX,
	DB_DPU1_ERROR_CNT_IDX,
	DB_DPU1_DBB_DRB_STATUS_OBT_IDX,
	DB_DPU1_DBB_SCRUB_2_ERR_IDX,
	DB_DPU1_DBB_SCRUB_1_ERR_IDX,
	DB_DPU1_DRB_EDAC_DOUBLE_ERR_IDX,
	DB_DPU1_DRB_EDAC_SINGLE_ERR_IDX,
	DB_DPU2_STATUS_TAB_OBT_IDX, /* 28 */
	DB_DPU2_DCU_DATA_IDX,
	DB_DPU2_SCE_OBTAINED_WORDS_IDX,
	DB_DPU2_DBB_STATUS_REG_IDX,
	DB_DPU2_MONITOR_TAB_OBT_IDX,
	DB_DPU2_REJECTED_CMD_IDX,
	DB_DPU2_ERROR_CNT_IDX,
	DB_DPU2_DBB_DRB_STATUS_OBT_IDX,
	DB_DPU2_DBB_SCRUB_2_ERR_IDX,
	DB_DPU2_DBB_SCRUB_1_ERR_IDX,
	DB_DPU2_DRB_EDAC_DOUBLE_ERR_IDX,
	DB_DPU2_DRB_EDAC_SINGLE_ERR_IDX,
	DB_DPU1_HSK_OBT_IDX, /* 40 */
	DB_DPU2_HSK_OBT_IDX,
	DB_DPU1_DCU1_HSK_OBT_IDX, /* 42 */
	DB_DPU1_DCU1_FIFO_ERR_CNT_IDX,
	DB_DPU1_DCU2_HSK_OBT_IDX,
	DB_DPU1_DCU2_FIFO_ERR_CNT_IDX,
	DB_DPU1_DCU3_HSK_OBT_IDX,
	DB_DPU1_DCU3_FIFO_ERR_CNT_IDX,
	DB_DPU1_DCU4_HSK_OBT_IDX,
	DB_DPU1_DCU4_FIFO_ERR_CNT_IDX,
	DB_DPU1_DCU5_HSK_OBT_IDX,
	DB_DPU1_DCU5_FIFO_ERR_CNT_IDX,
	DB_DPU1_DCU6_HSK_OBT_IDX,
	DB_DPU1_DCU6_FIFO_ERR_CNT_IDX,
	DB_DPU1_DCU7_HSK_OBT_IDX,
	DB_DPU1_DCU7_FIFO_ERR_CNT_IDX,
	DB_DPU1_DCU8_HSK_OBT_IDX,
	DB_DPU1_DCU8_FIFO_ERR_CNT_IDX,
	DB_DPU2_DCU1_HSK_OBT_IDX, /* 58 */
	DB_DPU2_DCU1_FIFO_ERR_CNT_IDX,
	DB_DPU2_DCU2_HSK_OBT_IDX,
	DB_DPU2_DCU2_FIFO_ERR_CNT_IDX,
	DB_DPU2_DCU3_HSK_OBT_IDX,
	DB_DPU2_DCU3_FIFO_ERR_CNT_IDX,
	DB_DPU2_DCU4_HSK_OBT_IDX,
	DB_DPU2_DCU4_FIFO_ERR_CNT_IDX,
	DB_DPU2_DCU5_HSK_OBT_IDX,
	DB_DPU2_DCU5_FIFO_ERR_CNT_IDX,
	DB_DPU2_DCU6_HSK_OBT_IDX,
	DB_DPU2_DCU6_FIFO_ERR_CNT_IDX,
	DB_DPU2_DCU7_HSK_OBT_IDX,
	DB_DPU2_DCU7_FIFO_ERR_CNT_IDX,
	DB_DPU2_DCU8_HSK_OBT_IDX,
	DB_DPU2_DCU8_FIFO_ERR_CNT_IDX,
	DB_DPU1_SCE1_HSK1_OBT_IDX, /* 74 */
	DB_DPU1_SCE2_HSK1_OBT_IDX,
	DB_DPU1_SCE3_HSK1_OBT_IDX,
	DB_DPU1_SCE4_HSK1_OBT_IDX,
	DB_DPU1_SCE5_HSK1_OBT_IDX,
	DB_DPU1_SCE6_HSK1_OBT_IDX,
	DB_DPU1_SCE7_HSK1_OBT_IDX,
	DB_DPU1_SCE8_HSK1_OBT_IDX,
	DB_DPU2_SCE1_HSK1_OBT_IDX, /* 82 */
	DB_DPU2_SCE2_HSK1_OBT_IDX,
	DB_DPU2_SCE3_HSK1_OBT_IDX,
	DB_DPU2_SCE4_HSK1_OBT_IDX,
	DB_DPU2_SCE5_HSK1_OBT_IDX,
	DB_DPU2_SCE6_HSK1_OBT_IDX,
	DB_DPU2_SCE7_HSK1_OBT_IDX,
	DB_DPU2_SCE8_HSK1_OBT_IDX,
	DB_DPU1_SCE1_HSK2_OBT_IDX, /* 90 */
	DB_DPU1_SCE2_HSK2_OBT_IDX,
	DB_DPU1_SCE3_HSK2_OBT_IDX,
	DB_DPU1_SCE4_HSK2_OBT_IDX,
	DB_DPU1_SCE5_HSK2_OBT_IDX,
	DB_DPU1_SCE6_HSK2_OBT_IDX,
	DB_DPU1_SCE7_HSK2_OBT_IDX,
	DB_DPU1_SCE8_HSK2_OBT_IDX,
	DB_DPU2_SCE1_HSK2_OBT_IDX, /* 98 */
	DB_DPU2_SCE2_HSK2_OBT_IDX,
	DB_DPU2_SCE3_HSK2_OBT_IDX,
	DB_DPU2_SCE4_HSK2_OBT_IDX,
	DB_DPU2_SCE5_HSK2_OBT_IDX,
	DB_DPU2_SCE6_HSK2_OBT_IDX,
	DB_DPU2_SCE7_HSK2_OBT_IDX,
	DB_DPU2_SCE8_HSK2_OBT_IDX,
	DB_DPU1_SCE1_HSK3_OBT_IDX, /* 106 */
	DB_DPU1_SCE2_HSK3_OBT_IDX,
	DB_DPU1_SCE3_HSK3_OBT_IDX,
	DB_DPU1_SCE4_HSK3_OBT_IDX,
	DB_DPU1_SCE5_HSK3_OBT_IDX,
	DB_DPU1_SCE6_HSK3_OBT_IDX,
	DB_DPU1_SCE7_HSK3_OBT_IDX,
	DB_DPU1_SCE8_HSK3_OBT_IDX,
	DB_DPU2_SCE1_HSK3_OBT_IDX, /* 114 */
	DB_DPU2_SCE2_HSK3_OBT_IDX,
	DB_DPU2_SCE3_HSK3_OBT_IDX,
	DB_DPU2_SCE4_HSK3_OBT_IDX,
	DB_DPU2_SCE5_HSK3_OBT_IDX,
	DB_DPU2_SCE6_HSK3_OBT_IDX,
	DB_DPU2_SCE7_HSK3_OBT_IDX,
	DB_DPU2_SCE8_HSK3_OBT_IDX,
	DB_DPU1_SCE1_BOOT_OBT_IDX, /* 122 */
	DB_DPU1_SCE2_BOOT_OBT_IDX,
	DB_DPU1_SCE3_BOOT_OBT_IDX,
	DB_DPU1_SCE4_BOOT_OBT_IDX,
	DB_DPU1_SCE5_BOOT_OBT_IDX,
	DB_DPU1_SCE6_BOOT_OBT_IDX,
	DB_DPU1_SCE7_BOOT_OBT_IDX,
	DB_DPU1_SCE8_BOOT_OBT_IDX,
	DB_DPU2_SCE1_BOOT_OBT_IDX,
	DB_DPU2_SCE2_BOOT_OBT_IDX,
	DB_DPU2_SCE3_BOOT_OBT_IDX,
	DB_DPU2_SCE4_BOOT_OBT_IDX,
	DB_DPU2_SCE5_BOOT_OBT_IDX,
	DB_DPU2_SCE6_BOOT_OBT_IDX,
	DB_DPU2_SCE7_BOOT_OBT_IDX,
	DB_DPU2_SCE8_BOOT_OBT_IDX,
	DB_DPU1_BSW_CPU_DRB_OBT_IDX, /* 138 */
	DB_DPU1_BSW_CPU_DRB_SW_VERS_IDX,
	DB_DPU1_BSW_CPU_DRB_SC_STAT_IDX,
	DB_DPU1_BSW_CPU_DRB_MEMSTAT_IDX, /* EEPROM status */
	DB_DPU1_BSW_CPU_DRB_MEMERR_IDX, /* EEPROM error */
	DB_DPU1_BSW_DCU_OBT_IDX,
	DB_DPU1_BSW_DCU_SW_VERS_IDX,
	DB_DPU2_BSW_CPU_DRB_OBT_IDX, /* 145 */
	DB_DPU2_BSW_CPU_DRB_SW_VERS_IDX,
	DB_DPU2_BSW_CPU_DRB_SC_STAT_IDX,
	DB_DPU2_BSW_CPU_DRB_MEMSTAT_IDX, /* EEPROM status */
	DB_DPU2_BSW_CPU_DRB_MEMERR_IDX, /* EEPROM error */
	DB_DPU2_BSW_DCU_OBT_IDX,
	DB_DPU2_BSW_DCU_SW_VERS_IDX,
	DB_LONG_PARAM_NUMBER,
};

/**
 * \enum DB_DATA_TYPES DB_data_types
 * \brief	List of ICU-ASW possible DB types
 */
enum {
	UINT8_TYPE = 1U, UINT16_TYPE = 2U, UINT32_TYPE = 4U, UINT48_TYPE = 6U, /* used by OBT in DPU tables */
	UINT64_TYPE = 8U, /* used by OBT in BSW DPU tables */
};

/**
 * \enum ASW_RUNNING_BIT ASW_status_bit
 * \brief	DB parameters ID: bit 0
 */
enum {
	SW_ASW = 0U, SW_BSW = 1U,
};

/**
 * \enum PARAM_MONITORED_BIT Param_monitored_bit
 * \brief	DB parameters ID: bit 1
 */
enum {
	PARAM_NOT_MONITORED = 0U, PARAM_MONITORED = 1U,
};

/**
 * \enum UNIT_INDEX Unit_index
 * \brief	DB parameters ID: bit 2-3
 */

enum {
	SYS_DPU1 = 0U, SYS_DPU2 = 1U, SYS_ICU = 2U,
};

/**
 * \enum SUBUNIT_INDEX Subunit_index
 * \brief	DB parameters ID: 4-8
 */
enum {
	SUBSYS_ICU = 0U,
	SUBSYS_GWA = 1U,
	SUBSYS_FWA = 2U,
	SUBSYS_CU = 3U,
	SUBSYS_TC = 4U,
	SUBSYS_DPU_STATUS = 5U,
	SUBSYS_DPU_HK = 6U,
	SUBSYS_DCU1 = 7U,
	SUBSYS_DCU2 = 8U,
	SUBSYS_DCU3 = 9U,
	SUBSYS_DCU4 = 10U,
	SUBSYS_DCU5 = 11U,
	SUBSYS_DCU6 = 12U,
	SUBSYS_DCU7 = 13U,
	SUBSYS_DCU8 = 14U,
	SUBSYS_SCE1 = 15U,
	SUBSYS_SCE2 = 16U,
	SUBSYS_SCE3 = 17U,
	SUBSYS_SCE4 = 18U,
	SUBSYS_SCE5 = 19U,
	SUBSYS_SCE6 = 20U,
	SUBSYS_SCE7 = 21U,
	SUBSYS_SCE8 = 22U,
	SUBSYS_BSW = 23U, // 23
};

/**
 * \brief Offsets for Parameter ID definition
 */
#define PARAM_SUB_SYSTEM_OFFSET 7U
#define PARAM_SYSTEM_OFFSET 12U
#define PARAM_MONIT_FLAG_OFFSET 14U
#define PARAM_SW_OFFSET 15U

/**
 * \brief Number of parameters on each subsystem (monitored or not)
 */
#define DB_ASW_ICU_ICU_MON_PARAM_NUMBER 14U //10U
#define DB_ASW_ICU_ICU_NOT_MON_PAR_NUM 21U /* included planning ID and active DPUs RT addresses*/
#define DB_ASW_ICU_GWA_MON_PARAM_NUMBER 2U
#define DB_ASW_ICU_GWA_NOT_MON_PAR_NUM 2U
#define DB_ASW_ICU_FWA_MON_PARAM_NUMBER 2U
#define DB_ASW_ICU_FWA_NOT_MON_PAR_NUM 2U
#define DB_ASW_ICU_CU_MON_PARAM_NUMBER 5U
#define DB_ASW_ICU_CU_NOT_MON_PAR_NUM 1U
#define DB_ASW_ICU_TC_MON_PARAM_NUMBER 24U
#define DB_ASW_ICU_TC_NOT_MON_PAR_NUM 2U

#define DB_ASW_DPU_DPU_STATUS_TAB_PARAM 17U
#define DB_ASW_DPU_DPU_MONIT_TAB_PARAM 11U
#define DB_ASW_DPU_DBB_DRB_STAT_TAB_PAR 15U
#define DB_ASW_DPU_DPU_STATUS_PAR_NUM  (DB_ASW_DPU_DPU_STATUS_TAB_PARAM + DB_ASW_DPU_DPU_MONIT_TAB_PARAM + DB_ASW_DPU_DBB_DRB_STAT_TAB_PAR)  /* twice */
#define DB_ASW_DPU_DPU_HSK_PARAM_NUMBER 28U  /* twice */
#define DB_ASW_DPU_DCU_PARAM_NUMBER 25U  /* x 16 */
#define DB_ASW_DPU_SCE_HSK1_PAR_NUM 28U
#define DB_ASW_DPU_SCE_HSK2_PAR_NUM 27U
#define DB_ASW_DPU_SCE_HSK3_PAR_NUM 27U
#define DB_ASW_DPU_SCE_PARAM_NUMBER (DB_ASW_DPU_SCE_HSK1_PAR_NUM + DB_ASW_DPU_SCE_HSK2_PAR_NUM + DB_ASW_DPU_SCE_HSK3_PAR_NUM)  /* x 16 */

#define DB_BSW_DPU_DPU_DRB_PARAM_NUMBER 23U /* twice */
#define DB_BSW_DPU_DCU_PARAM_NUMBER 19U /* twice */

/**
 * \brief Cumulative number of parameters on each subsystem (monitored or not)
 */
#define DB_MONITORED_PARAM_NUMB             (DB_ASW_ICU_ICU_MON_PARAM_NUMBER + DB_ASW_ICU_GWA_MON_PARAM_NUMBER + DB_ASW_ICU_FWA_MON_PARAM_NUMBER + DB_ASW_ICU_CU_MON_PARAM_NUMBER + DB_ASW_ICU_TC_MON_PARAM_NUMBER)
#define DB_NOT_MONITORED_ICU_PARAM_NUMB     (DB_ASW_ICU_ICU_NOT_MON_PAR_NUM + DB_ASW_ICU_GWA_NOT_MON_PAR_NUM + DB_ASW_ICU_FWA_NOT_MON_PAR_NUM + DB_ASW_ICU_CU_NOT_MON_PAR_NUM + DB_ASW_ICU_TC_NOT_MON_PAR_NUM)
#define DB_NOT_MONITORED_DPU_PARAM_NUMB     (DB_ASW_DPU_DPU_STATUS_PAR_NUM + DB_ASW_DPU_DPU_HSK_PARAM_NUMBER + (8 * (DB_ASW_DPU_DCU_PARAM_NUMBER + DB_ASW_DPU_SCE_PARAM_NUMBER)))
#define DB_NOT_MONIT_BSW_DPU_PARAM_NUMB     (DB_BSW_DPU_DPU_DRB_PARAM_NUMBER + DB_BSW_DPU_DCU_PARAM_NUMBER)
#define DB_NOT_MONITORED_PARAM_NUMB         (DB_NOT_MONITORED_ICU_PARAM_NUMB + (2 * (DB_NOT_MONITORED_DPU_PARAM_NUMB + DB_NOT_MONIT_BSW_DPU_PARAM_NUMB)))
#define DB_TOTAL_PARAM_NUMBER               (DB_MONITORED_PARAM_NUMB + DB_NOT_MONITORED_PARAM_NUMB)

/*
 * define offsets to locate database sections inside matrices
 * DB_PARAM_INDEX_ASW_ICU_icu_OFFSET = 0!!
 * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 *  FIXME: some parameters with 32-bits size...
 *  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 */

/**
 * \brief Indexing offsets for monitored parameters (inside monitored_db_param[] array)
 */
#define DB_PAR_IDX_ICU_MON_GWA_OFFSET (DB_ASW_ICU_ICU_MON_PARAM_NUMBER)
#define DB_PAR_IDX_ICU_MON_FWA_OFFSET (DB_PAR_IDX_ICU_MON_GWA_OFFSET + DB_ASW_ICU_GWA_MON_PARAM_NUMBER)
#define DB_PAR_IDX_ICU_MON_CU_OFFSET (DB_PAR_IDX_ICU_MON_FWA_OFFSET + DB_ASW_ICU_FWA_MON_PARAM_NUMBER)
#define DB_PAR_IDX_ICU_MON_TC_OFFSET (DB_PAR_IDX_ICU_MON_CU_OFFSET + DB_ASW_ICU_CU_MON_PARAM_NUMBER)

/**
 * \brief Indexing offsets for not monitored parameters (inside db_param[] array)
 */
#define DB_PARAM_IDX_ASW_ICU_GWA_OFFSET (DB_ASW_ICU_ICU_NOT_MON_PAR_NUM)
#define DB_PARAM_IDX_ASW_ICU_FWA_OFFSET (DB_PARAM_IDX_ASW_ICU_GWA_OFFSET + DB_ASW_ICU_GWA_NOT_MON_PAR_NUM)
#define DB_PARAM_IDX_ASW_ICU_CU_OFFSET (DB_PARAM_IDX_ASW_ICU_FWA_OFFSET + DB_ASW_ICU_FWA_NOT_MON_PAR_NUM)
#define DB_PARAM_IDX_ASW_ICU_TC_OFFSET (DB_PARAM_IDX_ASW_ICU_CU_OFFSET + DB_ASW_ICU_CU_NOT_MON_PAR_NUM)

#define DB_PARAM_IDX_ASW_DPU1_OFFSET (DB_PARAM_IDX_ASW_ICU_TC_OFFSET + DB_ASW_ICU_TC_NOT_MON_PAR_NUM)
#define DB_PAR_IDX_ASW_DPU1_DPU_OFFSET (DB_PARAM_IDX_ASW_DPU1_OFFSET + DB_ASW_DPU_DPU_STATUS_PAR_NUM)
#define DB_PAR_IDX_ASW_DPU1_DCU_OFFSET (DB_PAR_IDX_ASW_DPU1_DPU_OFFSET + DB_ASW_DPU_DPU_HSK_PARAM_NUMBER)
#define DB_PAR_IDX_ASW_DPU1_SCE_OFFSET (DB_PAR_IDX_ASW_DPU1_DCU_OFFSET + (8U * DB_ASW_DPU_DCU_PARAM_NUMBER))

#define DB_PAR_IDX_ASW_DPU2_OFFSET (DB_PAR_IDX_ASW_DPU1_SCE_OFFSET + (8U * DB_ASW_DPU_SCE_PARAM_NUMBER))
#define DB_PAR_IDX_ASW_DPU2_DPU_OFFSET (DB_PAR_IDX_ASW_DPU2_OFFSET + DB_ASW_DPU_DPU_STATUS_PAR_NUM)
#define DB_PAR_IDX_ASW_DPU2_DCU_OFFSET (DB_PAR_IDX_ASW_DPU2_DPU_OFFSET + DB_ASW_DPU_DPU_HSK_PARAM_NUMBER)
#define DB_PAR_IDX_ASW_DPU2_SCE_OFFSET (DB_PAR_IDX_ASW_DPU2_DCU_OFFSET + (8U * DB_ASW_DPU_DCU_PARAM_NUMBER))

#define DB_PARAM_INDEX_BSW_DPU1_OFFSET (DB_PAR_IDX_ASW_DPU2_SCE_OFFSET + (8U * DB_ASW_DPU_SCE_PARAM_NUMBER))
#define DB_PARAM_INDEX_BSW_DPU2_OFFSET (DB_PARAM_INDEX_BSW_DPU1_OFFSET + DB_BSW_DPU_DPU_DRB_PARAM_NUMBER + DB_BSW_DPU_DCU_PARAM_NUMBER)

/**
 * \}
 */

/**
 *  \ingroup DB_MANAGER_VARIABLES
 *  \{
 */
extern db_bnd_param_t monitored_db_param[DB_MONITORED_PARAM_NUMB];
extern db_param_t db_param[DB_NOT_MONITORED_PARAM_NUMB];
extern uint32_t db_long_curr_value[DB_LONG_PARAM_NUMBER][2];
/**
 * \}
 */

/**
 *  \ingroup DB_MANAGER_FUNCTIONS
 *  \{
 */

/**
 * \brief Function for the initialization of DB
 *
 * This function initializes the structures containing the monitored and non-monitored parameters.
 * The monitored DB contains parameters read from DAS.
 * \return none
 */
void asw_initialize_DB(void);

/**
 * \}
 */

/* Private functions */
void asw_initialize_ICU_monit_param(void);
void asw_initialize_ICU_param(void);
void asw_initialize_DPU_status_tabs(uint16_t DPU);
void asw_initialize_DPU_hk_tabs(uint16_t DPU);
void asw_initialize_DPU_DCU_tabs(uint16_t DPU);
void asw_initialize_DPU_SCE_tabs(uint16_t DPU);
void asw_initialize_DPU_BSW_tabs(uint16_t DPU);

#endif /* DB_TYPE_DEF_H_ */
